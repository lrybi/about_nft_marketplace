/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BasicNft,
  BasicNftInterface,
} from "../../../contracts/test/BasicNft";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC721Metadata__URI_QueryFor_NonExistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "DogMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TOKEN_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600581526020017f446f6769650000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f444f47000000000000000000000000000000000000000000000000000000000081525081600090816200008f91906200032c565b508060019081620000a191906200032c565b505050600060068190555062000413565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200013457607f821691505b6020821081036200014a5762000149620000ec565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001b47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000175565b620001c0868362000175565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200020d620002076200020184620001d8565b620001e2565b620001d8565b9050919050565b6000819050919050565b6200022983620001ec565b62000241620002388262000214565b84845462000182565b825550505050565b600090565b6200025862000249565b620002658184846200021e565b505050565b5b818110156200028d57620002816000826200024e565b6001810190506200026b565b5050565b601f821115620002dc57620002a68162000150565b620002b18462000165565b81016020851015620002c1578190505b620002d9620002d08562000165565b8301826200026a565b50505b505050565b600082821c905092915050565b60006200030160001984600802620002e1565b1980831691505092915050565b60006200031c8383620002ee565b9150826002028217905092915050565b6200033782620000b2565b67ffffffffffffffff811115620003535762000352620000bd565b5b6200035f82546200011b565b6200036c82828562000291565b600060209050601f831160018114620003a457600084156200038f578287015190505b6200039b85826200030e565b8655506200040b565b601f198416620003b48662000150565b60005b82811015620003de57848901518255600182019150602085019450602081019050620003b7565b86831015620003fe5784890151620003fa601f891682620002ee565b8355505b6001600288020188555050505b505050505050565b611cb180620004236000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146102ad578063c2229fea146102c9578063c87b56dd146102d3578063e985e9c51461030357610100565b806370a082311461022557806378ce90351461025557806395d89b4114610273578063a22cb4651461029157610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d75780636e02007d1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a91906114d7565b610333565b60405161012c919061151f565b60405180910390f35b61013d610415565b60405161014a91906115ca565b60405180910390f35b61016d60048036038101906101689190611622565b6104a7565b60405161017a9190611690565b60405180910390f35b61019d600480360381019061019891906116d7565b6104c3565b005b6101b960048036038101906101b49190611717565b6104d9565b005b6101d560048036038101906101d09190611717565b6105db565b005b6101f160048036038101906101ec9190611622565b6105fb565b6040516101fe9190611690565b60405180910390f35b61020f61060d565b60405161021c9190611779565b60405180910390f35b61023f600480360381019061023a9190611794565b610617565b60405161024c9190611779565b60405180910390f35b61025d6106d1565b60405161026a91906115ca565b60405180910390f35b61027b6106ed565b60405161028891906115ca565b60405180910390f35b6102ab60048036038101906102a691906117ed565b61077f565b005b6102c760048036038101906102c29190611962565b610795565b005b6102d16107b2565b005b6102ed60048036038101906102e89190611622565b610804565b6040516102fa91906115ca565b60405180910390f35b61031d600480360381019061031891906119e5565b610894565b60405161032a919061151f565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fe57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061040e575061040d82610928565b5b9050919050565b60606000805461042490611a54565b80601f016020809104026020016040519081016040528092919081815260200182805461045090611a54565b801561049d5780601f106104725761010080835404028352916020019161049d565b820191906000526020600020905b81548152906001019060200180831161048057829003601f168201915b5050505050905090565b60006104b282610992565b506104bc82610a1a565b9050919050565b6104d582826104d0610a57565b610a5f565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361054b5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105429190611690565b60405180910390fd5b600061055f838361055a610a57565b610a71565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105d5578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105cc93929190611a85565b60405180910390fd5b50505050565b6105f683838360405180602001604052806000815250610795565b505050565b600061060682610992565b9050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361068a5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106819190611690565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b604051806080016040528060508152602001611c2c6050913981565b6060600180546106fc90611a54565b80601f016020809104026020016040519081016040528092919081815260200182805461072890611a54565b80156107755780601f1061074a57610100808354040283529160200191610775565b820191906000526020600020905b81548152906001019060200180831161075857829003601f168201915b5050505050905090565b61079161078a610a57565b8383610c8b565b5050565b6107a08484846104d9565b6107ac84848484610dfa565b50505050565b6107be33600654610fb1565b6006547fef1da42f89c42f48befa143007e6f5efd84a2d1cc3dc97c5edd2d3373220f66d60405160405180910390a260016006546107fc9190611aeb565b600681905550565b6060600073ffffffffffffffffffffffffffffffffffffffff1661082783610fcf565b73ffffffffffffffffffffffffffffffffffffffff1603610874576040517f6df5edae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604051806080016040528060508152602001611c2c605091399050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008061099e83610fcf565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a1157826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610a089190611779565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610a6c838383600161100c565b505050565b600080610a7d84610fcf565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610abf57610abe8184866111d1565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b5057610b0160008560008061100c565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610bd3576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cfc57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610cf39190611690565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ded919061151f565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115610fab578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610e3e610a57565b8685856040518563ffffffff1660e01b8152600401610e609493929190611b74565b6020604051808303816000875af1925050508015610e9c57506040513d601f19601f82011682018060405250810190610e999190611bd5565b60015b610f20573d8060008114610ecc576040519150601f19603f3d011682016040523d82523d6000602084013e610ed1565b606091505b506000815103610f1857836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610f0f9190611690565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610fa957836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fa09190611690565b60405180910390fd5b505b50505050565b610fcb828260405180602001604052806000815250611295565b5050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806110455750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561117957600061105584610992565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156110c057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156110d357506110d18184610894565b155b1561111557826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161110c9190611690565b60405180910390fd5b811561117757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6111dc8383836112b1565b61129057600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361125157806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016112489190611779565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611287929190611c02565b60405180910390fd5b505050565b61129f8383611372565b6112ac6000848484610dfa565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561136957508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061132a57506113298484610894565b5b8061136857508273ffffffffffffffffffffffffffffffffffffffff1661135083610a1a565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113e45760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113db9190611690565b60405180910390fd5b60006113f283836000610a71565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114665760006040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161145d9190611690565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114b48161147f565b81146114bf57600080fd5b50565b6000813590506114d1816114ab565b92915050565b6000602082840312156114ed576114ec611475565b5b60006114fb848285016114c2565b91505092915050565b60008115159050919050565b61151981611504565b82525050565b60006020820190506115346000830184611510565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611574578082015181840152602081019050611559565b60008484015250505050565b6000601f19601f8301169050919050565b600061159c8261153a565b6115a68185611545565b93506115b6818560208601611556565b6115bf81611580565b840191505092915050565b600060208201905081810360008301526115e48184611591565b905092915050565b6000819050919050565b6115ff816115ec565b811461160a57600080fd5b50565b60008135905061161c816115f6565b92915050565b60006020828403121561163857611637611475565b5b60006116468482850161160d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061167a8261164f565b9050919050565b61168a8161166f565b82525050565b60006020820190506116a56000830184611681565b92915050565b6116b48161166f565b81146116bf57600080fd5b50565b6000813590506116d1816116ab565b92915050565b600080604083850312156116ee576116ed611475565b5b60006116fc858286016116c2565b925050602061170d8582860161160d565b9150509250929050565b6000806000606084860312156117305761172f611475565b5b600061173e868287016116c2565b935050602061174f868287016116c2565b92505060406117608682870161160d565b9150509250925092565b611773816115ec565b82525050565b600060208201905061178e600083018461176a565b92915050565b6000602082840312156117aa576117a9611475565b5b60006117b8848285016116c2565b91505092915050565b6117ca81611504565b81146117d557600080fd5b50565b6000813590506117e7816117c1565b92915050565b6000806040838503121561180457611803611475565b5b6000611812858286016116c2565b9250506020611823858286016117d8565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61186f82611580565b810181811067ffffffffffffffff8211171561188e5761188d611837565b5b80604052505050565b60006118a161146b565b90506118ad8282611866565b919050565b600067ffffffffffffffff8211156118cd576118cc611837565b5b6118d682611580565b9050602081019050919050565b82818337600083830152505050565b6000611905611900846118b2565b611897565b90508281526020810184848401111561192157611920611832565b5b61192c8482856118e3565b509392505050565b600082601f8301126119495761194861182d565b5b81356119598482602086016118f2565b91505092915050565b6000806000806080858703121561197c5761197b611475565b5b600061198a878288016116c2565b945050602061199b878288016116c2565b93505060406119ac8782880161160d565b925050606085013567ffffffffffffffff8111156119cd576119cc61147a565b5b6119d987828801611934565b91505092959194509250565b600080604083850312156119fc576119fb611475565b5b6000611a0a858286016116c2565b9250506020611a1b858286016116c2565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a6c57607f821691505b602082108103611a7f57611a7e611a25565b5b50919050565b6000606082019050611a9a6000830186611681565b611aa7602083018561176a565b611ab46040830184611681565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611af6826115ec565b9150611b01836115ec565b9250828201905080821115611b1957611b18611abc565b5b92915050565b600081519050919050565b600082825260208201905092915050565b6000611b4682611b1f565b611b508185611b2a565b9350611b60818560208601611556565b611b6981611580565b840191505092915050565b6000608082019050611b896000830187611681565b611b966020830186611681565b611ba3604083018561176a565b8181036060830152611bb58184611b3b565b905095945050505050565b600081519050611bcf816114ab565b92915050565b600060208284031215611beb57611bea611475565b5b6000611bf984828501611bc0565b91505092915050565b6000604082019050611c176000830185611681565b611c24602083018461176a565b939250505056fe697066733a2f2f62616679726569617761357136696463377364377066776a6b706c6167787470756e366f743235796b65643269626f6167636b74773735793732792f6d657461646174612e6a736f6ea26469706673582212201eaabb592e4e1514c42ce2e732840f0ecff40fed24a3d02ef845d08d7c3e6d8364736f6c63430008140033";

type BasicNftConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicNftConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicNft__factory extends ContractFactory {
  constructor(...args: BasicNftConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BasicNft & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BasicNft__factory {
    return super.connect(runner) as BasicNft__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicNftInterface {
    return new Interface(_abi) as BasicNftInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BasicNft {
    return new Contract(address, _abi, runner) as unknown as BasicNft;
  }
}
